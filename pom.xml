<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.2</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.example</groupId>
    <artifactId>spring-boot-rest-api</artifactId>
    <version>1.5.0</version>
    <packaging>jar</packaging>

    <name>spring-boot-docker</name>
    <description>spring boot rest api by docker</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>17</java.version>
        <docker.image.prefix>simpath</docker.image.prefix>
        <docker.image.name>spring-boot-docker</docker.image.name>
        <docker.host.url>http://127.0.0.1:2375</docker.host.url>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.43.0</version>

                <configuration>
                    <dockerHost>${docker.host.url}</dockerHost>
                    <!--<dockerHost>unix:///var/run/docker.sock</dockerHost>-->
                    <verbose>true</verbose>
                    <images>
                        <image>
                            <name>${docker.image.prefix}/${docker.image.name}</name>
                            <build>
                                <!--<dockerFileDir>${project.basedir}/src/main/docker/</dockerFileDir>-->
                                <dockerFileDir>${project.basedir}/target/dockerfile/</dockerFileDir>
                                <assembly>
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                <tags>
                                    <tag>${project.version}</tag>
                                </tags>
                            </build>
                            <run>
                                <ports>
                                    <port>8080:8080</port>
                                </ports>
                            </run>
                        </image>
                        <!--postgres container-->
                        <image>
                            <name>postgres:alpine3.18</name>
                            <alias>postgresDB</alias>
                            <run>
                                <ports>
                                    <port>5432:5432</port>
                                </ports>
                                <env>
                                    <POSTGRES_DB>spring</POSTGRES_DB>
                                    <POSTGRES_PASSWORD>password</POSTGRES_PASSWORD>
                                    <POSTGRES_USER>postgres</POSTGRES_USER>
                                </env>
                                <volumes>
                                    <bind>
                                        <volume>./data:/var/lib/postgresql/data3</volume>
                                    </bind>
                                </volumes>

                                <wait>
                                    <time>10000</time>
                                </wait>
                            </run>
                        </image>
                        <!-- docker run &#45;&#45;name spring-boot-docker -p 8080:8080-->
                        <!-- -link postgresDB:postgresDB-->
                        <!-- -e SPRING_DATASOURCE_URL=jdbc:postgresql://postgresDB:5432/postgres-->
                        <!-- -e SPRING_PROFILES_ACTIVE=dev simpath/spring-boot-docker-->
                        <image>
                            <name>simpath/spring-boot-docker</name>
                            <alias>spring-boot-docker</alias>
                            <run>
                                <ports>
                                    <port>8080:8080</port>
                                </ports>
                                <links>
                                    <link>postgresDB:postgresDB</link>
                                </links>
                                <env>
                                    <SPRING_PROFILES_ACTIVE>dev</SPRING_PROFILES_ACTIVE>
                                    <SPRING_DATASOURCE_URL>jdbc:postgresql://postgresDB:5432/spring
                                    </SPRING_DATASOURCE_URL>
                                </env>
                                <dependsOn>
                                    <container>postgresDB</container>
                                </dependsOn>
                                <wait>
                                    <time>75000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <scripts>
                        <script>file:///${project.basedir}/src/main/scripts/BuildDockerfile.groovy</script>
                    </scripts>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.groovy</groupId>
                        <artifactId>groovy-all</artifactId>
                        <version>4.0.12</version>
                        <type>pom</type>
                    </dependency>
                </dependencies>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <spring.profiles.active>prod</spring.profiles.active>
            </properties>
        </profile>
    </profiles>

</project>
